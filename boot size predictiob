# STEP 1: PREPARE THE DATA

import pandas

# Dictionary of data with dog boot size and harness size

data = {
	'bootsize' : [
	39, 38, 37, 39, 38, 35, 37, 36, 35, 40, 
                    40, 36, 38, 39, 42, 42, 36, 36, 35, 41, 
                    42, 38, 37, 35, 40, 36, 35, 39, 41, 37, 
                    35, 41, 39, 41, 42, 42, 36, 37, 37, 39,
                    42, 35, 36, 41, 41, 41, 39, 39, 35, 39
	]

	'harness_size' : [
	58, 58, 52, 58, 57, 52, 55, 53, 49, 54,
                59, 56, 53, 58, 57, 58, 56, 51, 50, 59,
                59, 59, 55, 50, 55, 52, 53, 54, 61, 56,
                55, 60, 57, 56, 61, 58, 53, 57, 57, 55,
                60, 51, 52, 56, 55, 57, 58, 57, 51, 59

	]
}

# STEP 2 Convert it into table using pandas

dataset = pandas.Dataframe(data)

# STEP 3:SELECT A MODEL

import statsmodel.formula.api as smf
 
 # formula is determined by harness size therefore
formula = "bootsize ~ harness_size"

model = smf.ols(formula = formula, data = dataset)

if not hasattr(model, 'params'):
	print("Mselected model doesnt have set parameters and needs to be trained")

 # STEP 4: TRAIN THE MODEL


 # OLS model uses slope and offset, which the model doenst have yet

 import graphing

 fitted_model = model.fit()
 print("The following model parameters have been found:\n" +
        f"Line slope: {fitted_model.params[1]}\n"+
        f"Line Intercept: {fitted_model.params[0]}")


 # Show a graph of the result
 graphing.scatter_2D(dataset, label_x="harness_size",
 	                          label_y="boot_size",
 	                          trendline=lambda x:)

 fitted_model.params[1] * x + fittr


# USE THE MODEL
harness_size = {'harness_size': [52.5]}
approximate_boot_size = fitted_model.predict(hareness_size)
print("Estiamted approximate_boot_size:")
print(approximate_boot_size[0])

